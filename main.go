package main

import (
	"fmt"
	"maps"
	"os"
	"slices"

	"hidehic0/acc_utils/cmd"
	"hidehic0/acc_utils/utils"

	"github.com/spf13/cobra"
)

var geturlCmd = &cobra.Command{
	Use:   "geturl",
	Short: "get Urls",
	Long:  "get Urls",
	RunE: func(cmd *cobra.Command, args []string) error {
		tasks := utils.GetTaskInfomation()
		for _, key := range slices.Sorted(maps.Keys(tasks)) {
			task := tasks[key]
			fmt.Printf("ID: %s URL: %s\n", task.Id, task.Url)
		}
		return nil
	},
}

var submitCmd = &cobra.Command{
	Use:   "submit",
	Short: "Submit code",
	Long:  "Submit code",
	Args:  cobra.ExactArgs(1),
	RunE: func(cmd *cobra.Command, args []string) error {
		task := args[0]

		if !slices.Contains(utils.GetTasks(), task) {
			fmt.Printf("task %s not found\n", task)
			return nil
		}

		submit.SubmitFn(task)

		return nil
	},
}

var rootCmd = &cobra.Command{
	Use:   "acc_utils",
	Short: "A tool that uses files generated by atcoder-cli to open and interact with problems",
	Long:  "A tool that uses files generated by atcoder-cli to open and interact with problems",
	RunE: func(cmd *cobra.Command, args []string) error {
		if len(args) == 0 {
			return cmd.Help()
		}
		return nil
	},
}

func main() {
	if err := rootCmd.Execute(); err != nil {
		os.Exit(1)
	}
}

func init() {
	rootCmd.AddCommand(geturlCmd)
	rootCmd.AddCommand(submitCmd)
}
